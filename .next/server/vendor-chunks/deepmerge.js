"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/deepmerge";
exports.ids = ["vendor-chunks/deepmerge"];
exports.modules = {

/***/ "(ssr)/./node_modules/deepmerge/dist/es.js":
/*!*******************************************!*\
  !*** ./node_modules/deepmerge/dist/es.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar isMergeableObject = function isMergeableObject(value) {\n    return isNonNullObject(value) && !isSpecial(value);\n};\nfunction isNonNullObject(value) {\n    return !!value && typeof value === \"object\";\n}\nfunction isSpecial(value) {\n    var stringValue = Object.prototype.toString.call(value);\n    return stringValue === \"[object RegExp]\" || stringValue === \"[object Date]\" || isReactElement(value);\n}\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === \"function\" && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for(\"react.element\") : 0xeac7;\nfunction isReactElement(value) {\n    return value.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n    return target.concat(source).map(function(element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n    });\n}\nfunction mergeObject(target, source, options) {\n    var destination = {};\n    if (options.isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], options);\n        }\n    });\n    return destination;\n}\nfunction deepmerge(target, source, options) {\n    options = options || {};\n    options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n    options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n    if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n    } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n    } else {\n        return mergeObject(target, source, options);\n    }\n}\ndeepmerge.all = function deepmergeAll(array, options) {\n    if (!Array.isArray(array)) {\n        throw new Error(\"first argument should be an array\");\n    }\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, options);\n    }, {});\n};\nvar deepmerge_1 = deepmerge;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (deepmerge_1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPO1FBQ04sT0FBT1MsWUFBWUwsUUFBUUMsUUFBUUw7SUFDcEM7QUFDRDtBQUVBRSxVQUFVZ0IsR0FBRyxHQUFHLFNBQVNDLGFBQWFDLEtBQUssRUFBRXBCLE9BQU87SUFDbkQsSUFBSSxDQUFDSCxNQUFNQyxPQUFPLENBQUNzQixRQUFRO1FBQzFCLE1BQU0sSUFBSUMsTUFBTTtJQUNqQjtJQUVBLE9BQU9ELE1BQU1FLE1BQU0sQ0FBQyxTQUFTQyxJQUFJLEVBQUVDLElBQUk7UUFDdEMsT0FBT3RCLFVBQVVxQixNQUFNQyxNQUFNeEI7SUFDOUIsR0FBRyxDQUFDO0FBQ0w7QUFFQSxJQUFJeUIsY0FBY3ZCO0FBRWxCLGlFQUFldUIsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtZmVlZGJhY2svLi9ub2RlX21vZHVsZXMvZGVlcG1lcmdlL2Rpc3QvZXMuanM/YTczOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNNZXJnZWFibGVPYmplY3QgPSBmdW5jdGlvbiBpc01lcmdlYWJsZU9iamVjdCh2YWx1ZSkge1xuXHRyZXR1cm4gaXNOb25OdWxsT2JqZWN0KHZhbHVlKVxuXHRcdCYmICFpc1NwZWNpYWwodmFsdWUpXG59O1xuXG5mdW5jdGlvbiBpc05vbk51bGxPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuICEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0J1xufVxuXG5mdW5jdGlvbiBpc1NwZWNpYWwodmFsdWUpIHtcblx0dmFyIHN0cmluZ1ZhbHVlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKTtcblxuXHRyZXR1cm4gc3RyaW5nVmFsdWUgPT09ICdbb2JqZWN0IFJlZ0V4cF0nXG5cdFx0fHwgc3RyaW5nVmFsdWUgPT09ICdbb2JqZWN0IERhdGVdJ1xuXHRcdHx8IGlzUmVhY3RFbGVtZW50KHZhbHVlKVxufVxuXG4vLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvYjVhYzk2M2ZiNzkxZDEyOThlN2YzOTYyMzYzODNiYzk1NWY5MTZjMS9zcmMvaXNvbW9ycGhpYy9jbGFzc2ljL2VsZW1lbnQvUmVhY3RFbGVtZW50LmpzI0wyMS1MMjVcbnZhciBjYW5Vc2VTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5mb3I7XG52YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gY2FuVXNlU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpIDogMHhlYWM3O1xuXG5mdW5jdGlvbiBpc1JlYWN0RWxlbWVudCh2YWx1ZSkge1xuXHRyZXR1cm4gdmFsdWUuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRVxufVxuXG5mdW5jdGlvbiBlbXB0eVRhcmdldCh2YWwpIHtcblx0cmV0dXJuIEFycmF5LmlzQXJyYXkodmFsKSA/IFtdIDoge31cbn1cblxuZnVuY3Rpb24gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQodmFsdWUsIG9wdGlvbnMpIHtcblx0cmV0dXJuIChvcHRpb25zLmNsb25lICE9PSBmYWxzZSAmJiBvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0KHZhbHVlKSlcblx0XHQ/IGRlZXBtZXJnZShlbXB0eVRhcmdldCh2YWx1ZSksIHZhbHVlLCBvcHRpb25zKVxuXHRcdDogdmFsdWVcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEFycmF5TWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcblx0cmV0dXJuIHRhcmdldC5jb25jYXQoc291cmNlKS5tYXAoZnVuY3Rpb24oZWxlbWVudCkge1xuXHRcdHJldHVybiBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZChlbGVtZW50LCBvcHRpb25zKVxuXHR9KVxufVxuXG5mdW5jdGlvbiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHR2YXIgZGVzdGluYXRpb24gPSB7fTtcblx0aWYgKG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QodGFyZ2V0KSkge1xuXHRcdE9iamVjdC5rZXlzKHRhcmdldCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCh0YXJnZXRba2V5XSwgb3B0aW9ucyk7XG5cdFx0fSk7XG5cdH1cblx0T2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuXHRcdGlmICghb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdChzb3VyY2Vba2V5XSkgfHwgIXRhcmdldFtrZXldKSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoc291cmNlW2tleV0sIG9wdGlvbnMpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gZGVlcG1lcmdlKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG5cdFx0fVxuXHR9KTtcblx0cmV0dXJuIGRlc3RpbmF0aW9uXG59XG5cbmZ1bmN0aW9uIGRlZXBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0b3B0aW9ucy5hcnJheU1lcmdlID0gb3B0aW9ucy5hcnJheU1lcmdlIHx8IGRlZmF1bHRBcnJheU1lcmdlO1xuXHRvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0ID0gb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCB8fCBpc01lcmdlYWJsZU9iamVjdDtcblxuXHR2YXIgc291cmNlSXNBcnJheSA9IEFycmF5LmlzQXJyYXkoc291cmNlKTtcblx0dmFyIHRhcmdldElzQXJyYXkgPSBBcnJheS5pc0FycmF5KHRhcmdldCk7XG5cdHZhciBzb3VyY2VBbmRUYXJnZXRUeXBlc01hdGNoID0gc291cmNlSXNBcnJheSA9PT0gdGFyZ2V0SXNBcnJheTtcblxuXHRpZiAoIXNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2gpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2UgaWYgKHNvdXJjZUlzQXJyYXkpIHtcblx0XHRyZXR1cm4gb3B0aW9ucy5hcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucylcblx0fVxufVxuXG5kZWVwbWVyZ2UuYWxsID0gZnVuY3Rpb24gZGVlcG1lcmdlQWxsKGFycmF5LCBvcHRpb25zKSB7XG5cdGlmICghQXJyYXkuaXNBcnJheShhcnJheSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ2ZpcnN0IGFyZ3VtZW50IHNob3VsZCBiZSBhbiBhcnJheScpXG5cdH1cblxuXHRyZXR1cm4gYXJyYXkucmVkdWNlKGZ1bmN0aW9uKHByZXYsIG5leHQpIHtcblx0XHRyZXR1cm4gZGVlcG1lcmdlKHByZXYsIG5leHQsIG9wdGlvbnMpXG5cdH0sIHt9KVxufTtcblxudmFyIGRlZXBtZXJnZV8xID0gZGVlcG1lcmdlO1xuXG5leHBvcnQgZGVmYXVsdCBkZWVwbWVyZ2VfMTtcbiJdLCJuYW1lcyI6WyJpc01lcmdlYWJsZU9iamVjdCIsInZhbHVlIiwiaXNOb25OdWxsT2JqZWN0IiwiaXNTcGVjaWFsIiwic3RyaW5nVmFsdWUiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJpc1JlYWN0RWxlbWVudCIsImNhblVzZVN5bWJvbCIsIlN5bWJvbCIsImZvciIsIlJFQUNUX0VMRU1FTlRfVFlQRSIsIiQkdHlwZW9mIiwiZW1wdHlUYXJnZXQiLCJ2YWwiLCJBcnJheSIsImlzQXJyYXkiLCJjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCIsIm9wdGlvbnMiLCJjbG9uZSIsImRlZXBtZXJnZSIsImRlZmF1bHRBcnJheU1lcmdlIiwidGFyZ2V0Iiwic291cmNlIiwiY29uY2F0IiwibWFwIiwiZWxlbWVudCIsIm1lcmdlT2JqZWN0IiwiZGVzdGluYXRpb24iLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImFycmF5TWVyZ2UiLCJzb3VyY2VJc0FycmF5IiwidGFyZ2V0SXNBcnJheSIsInNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2giLCJhbGwiLCJkZWVwbWVyZ2VBbGwiLCJhcnJheSIsIkVycm9yIiwicmVkdWNlIiwicHJldiIsIm5leHQiLCJkZWVwbWVyZ2VfMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/deepmerge/dist/es.js\n");

/***/ })

};
;